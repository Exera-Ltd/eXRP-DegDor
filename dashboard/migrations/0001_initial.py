# Generated by Django 5.0.3 on 2024-03-25 11:18

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Miss', 'Miss')], max_length=10)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateTimeField()),
                ('mobile_1', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('mobile_2', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('nic_number', models.CharField(blank=True, max_length=20, null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance', models.CharField(blank=True, choices=[('Swan', 'Swan'), ('Mauritius Union', 'Mauritius Union')], max_length=50, null=True)),
                ('created_date', models.DateField(blank=True)),
                ('last_modified_date', models.DateField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='LensDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(choices=[('Right', 'Right'), ('Left', 'Left')], max_length=5)),
                ('sph', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cyl', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('axis', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_location', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('number_of_patients', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='dashboard.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_eye_test', models.CharField(blank=True, max_length=255)),
                ('care_system', models.CharField(blank=True, choices=[('Permanent', 'Permanent'), ('Temporary', 'Temporary')], max_length=255)),
                ('recommendation', models.TextField(blank=True)),
                ('next_checkup', models.DateField(blank=True, null=True)),
                ('vision', models.CharField(blank=True, max_length=255)),
                ('created_date', models.DateField(blank=True)),
                ('last_modified_date', models.DateField(blank=True)),
                ('prescription_issuer', models.CharField(blank=True, max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(choices=[('contact_lenses', 'Contact Lenses'), ('lenses', 'Lenses')], max_length=50)),
                ('supplier', models.CharField(blank=True, max_length=100, null=True)),
                ('salesman', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_lens', models.CharField(blank=True, max_length=100, null=True)),
                ('lens', models.CharField(blank=True, max_length=100, null=True)),
                ('base_curve', models.CharField(blank=True, max_length=100, null=True)),
                ('diameter', models.CharField(blank=True, max_length=100, null=True)),
                ('ht', models.CharField(blank=True, max_length=100, null=True)),
                ('frame', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('supplier_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('no_of_boxes', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateField(blank=True)),
                ('last_modified_date', models.DateField(blank=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.customer')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_cards', to='dashboard.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='GlassPrescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_lenses', models.CharField(blank=True, max_length=255, null=True)),
                ('pdr', models.CharField(blank=True, max_length=255, null=True)),
                ('pdl', models.CharField(blank=True, max_length=255, null=True)),
                ('glass_add', models.CharField(blank=True, max_length=255, null=True)),
                ('lens_detail_left', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='left_glass_prescription', to='dashboard.lensdetails')),
                ('lens_detail_right', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='right_glass_prescription', to='dashboard.lensdetails')),
                ('prescription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='glass_prescription', to='dashboard.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='ContactLensPrescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_contact_lenses', models.CharField(blank=True, max_length=255)),
                ('contact_lens_add', models.CharField(blank=True, max_length=255, null=True)),
                ('lens_detail_left', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='left_contact_prescription', to='dashboard.lensdetails')),
                ('lens_detail_right', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='right_contact_prescription', to='dashboard.lensdetails')),
                ('prescription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_lens_prescription', to='dashboard.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.CharField(max_length=50, unique=True)),
                ('item_name', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_of_purchase', models.DateField(blank=True, null=True)),
                ('reorder_level', models.PositiveIntegerField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('serial_number_or_barcode', models.CharField(blank=True, max_length=200, null=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True, verbose_name='SKU')),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/img/product_images/')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.category')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.location')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='dashboard.invoice')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.product')),
            ],
        ),
    ]
